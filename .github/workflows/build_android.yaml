on:
  workflow_call:
    inputs:
      appDirectory:
        required: true
        type: string
      buildApk:
        required: false
        default: true
        type: boolean
      buildBundle:
        required: false
        default: true
        type: boolean
      upload:
        required: false
        default: false
        type: boolean
      archiveArtifacts:
        required: false
        default: false
        type: boolean
      majorFactor:
        required: false
        default: 100000000
        type: number
      minorFactor:
        required: false
        default: 1000000
        type: number
      patchFactor:
        required: false
        default: 10000
        type: number
      lfs:
        required: false
        default: false
        type: boolean
      firebasePreview:
        required: false
        default: false
        type: boolean
      runner:
        required: false
        type: string
        default: ubuntu-latest
    secrets:
      additionalBuildArguments:
        required: false
      keyStore:
        required: true
      keyStorePassword:
        required: true
      keyPassword:
        required: true
      keyAlias:
        required: true
      googleApiKey:
        required: false
      firebaseAppId:
        required: false
      firebaseServiceAccountJson:
        required: false

jobs:
  build_android:
    name: Build Android App
    runs-on: ${{ inputs.runner }}

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: ${{ inputs.lfs }}
      - name: Checkout LFS objects
        if: ${{ inputs.lfs }}
        run: git lfs checkout
      - uses: subosito/flutter-action@v2

      - name: Set Build Number
        shell: bash
        run: |
          file=./${{ inputs.appDirectory }}/pubspec.yaml
          version=$(awk '/version/{print $NF}' "$file")
          IFS='.' read -r -a numbers <<< "$version"
          major=${numbers[0]}
          minor=${numbers[1]}
          IFS='+' read -r -a patchAndBuild <<< "${numbers[2]}"
          patch=${patchAndBuild[0]}

          buildNumber=$(($(($(((major * ${{ inputs.majorFactor }}) + (minor * ${{ inputs.minorFactor }}))) + (patch * ${{ inputs.patchFactor }}))) + $GITHUB_RUN_NUMBER))
          echo BUILD_NUMBER=$buildNumber >> $GITHUB_ENV
      - name: Setup Signing
        env:
          keyPropertiesPath: ${{ github.workspace }}/${{ inputs.appDirectory }}/android/key.properties
          keystorePath: ${{ github.workspace }}/${{ inputs.appDirectory }}/android/key.jks
          androidKeyStore: ${{ secrets.keyStore }}
          keyStorePassword: ${{ secrets.keyStorePassword }}
          keyPassword: ${{ secrets.keyPassword }}
          keyAlias: ${{ secrets.keyAlias }}
        run: |
          echo "${{ env.androidKeyStore }}" | base64 --decode > ${{ env.keystorePath }}
          echo storePassword="${{ env.keyStorePassword }}" >> ${{ env.keyPropertiesPath }}
          echo keyPassword="${{ env.keyPassword }}" >> ${{ env.keyPropertiesPath }}
          echo keyAlias="${{ env.keyAlias }}" >> ${{ env.keyPropertiesPath }}
          echo storeFile="${{ env.keystorePath }}" >> ${{ env.keyPropertiesPath }}
      - name: Build Apk
        if: inputs.buildApk || inputs.firebasePreview
        working-directory: ${{ inputs.appDirectory }}
        run: flutter build apk --build-number=${{ env.BUILD_NUMBER }} ${{ secrets.additionalBuildArguments}}
      - name: Build Bundle
        if: inputs.buildBundle
        working-directory: ${{ inputs.appDirectory }}
        run: flutter build appbundle --build-number=${{ env.BUILD_NUMBER }} ${{ secrets.additionalBuildArguments}}
      - name: Archive Artifacts
        if: inputs.archiveArtifacts
        uses: actions/upload-artifact@v3
        with:
          name: Android Apps
          retention-days: 5
          path: |
            **/release/**/*.apk
            **/release/**/app-release.aab
      - name: Upload to Google Play
        if: inputs.upload == true && github.event_name != 'pull_request'
        uses: maierj/fastlane-action@v2.2.0
        env:
          GOOGLE_UPLOAD_KEY: ${{ secrets.googleApiKey }}
        with:
          verbose: true
          lane: uploadApp
          subdirectory: ./${{ inputs.appDirectory }}/android
          bundle-install-path: "vendor/bundle"
      - name: Firebase App Preview
        if: ${{ inputs.firebasePreview }}
        shell: sh
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/google_distribution_service_account.json
        run: |
          # Upload Apk to Firebase App Distribution
          # https://firebase.google.com/docs/app-distribution/authenticate-service-account?platform=android
          echo "${{secrets.firebaseServiceAccountJson}}" > ./google_distribution_service_account.json
          
          echo $GOOGLE_APPLICATION_CREDENTIALS
          cat $GOOGLE_APPLICATION_CREDENTIALS
          curl -sL https://firebase.tools | bash
          FIREBASE_OUTPUT=$(firebase appdistribution:distribute  \
            --app ${{ secrets.firebaseAppId }}  \
            --release-notes "${{ env.GITHUB_REF_NAME }}" \
            ${{ inputs.appDirectory }}/build/app/outputs/apk/release/app-release.apk)

          echo $FIREBASE_OUTPUT

          # Grab Testing Url
          TEST_URL=$(echo $FIREBASE_OUTPUT | grep -E -o "(https://appdistribution.firebase.google.com/testerapps/.*)")
          
          echo $TEST_URL

          # Set ENV Variable https://docs.codemagic.io/yaml-basic-configuration/environment-variables/#artifact-links
          CM_ARTIFACT_LINKS=$(echo "{[{"type":"apk","url":\""$TEST_URL"\"}]}")
          CM_PULL_REQUEST_NUMBER=${{ github.event.pull_request.number }}

          # Run codemagic_app_preview comment
          flutter pub global activate codemagic_app_preview
          app_preview post --gh_token ${{ secrets.GITHUB_TOKEN }}
          
