on:
  workflow_call:
    inputs:
      appDirectory:
        required: true
        type: string
      buildApk:
        required: false
        default: true
        type: boolean
      buildBundle:
        required: false
        default: true
        type: boolean
      upload:
        required: false
        default: false
        type: boolean
      archiveArtifacts:
        required: false
        default: false
        type: boolean
      buildNumberOffset:
        required: false
        default: 0
        type: number
      lfs:
        required: false
        default: false
        type: boolean
      runner:
        required: false
        type: string
        default: ubuntu-latest
    secrets:
      additionalBuildArguments:
        required: false
      keyStore:
        required: true
      keyStorePassword:
        required: true
      keyPassword:
        required: true
      keyAlias:
        required: true
      googleApiKey:
        required: false

jobs:
  build_android:
    name: Build Android App
    runs-on: ${{ inputs.runner }}

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: ${{ inputs.lfs }}
      - name: Checkout LFS objects
        if: ${{ inputs.lfs }}
        run: git lfs checkout
      - uses: subosito/flutter-action@v2

      - name: Set Build Number
        shell: bash
        run: |
          buildNumber=$((${{ inputs.buildNumberOffset }} + $GITHUB_RUN_NUMBER))
          echo BUILD_NUMBER=$buildNumber >> $GITHUB_ENV
      - name: Setup Signing
        env:
          keyPropertiesPath: ${{ github.workspace }}/${{ inputs.appDirectory }}/android/key.properties
          keystorePath: ${{ github.workspace }}/${{ inputs.appDirectory }}/android/key.jks
          androidKeyStore: ${{ secrets.keyStore }}
          keyStorePassword: ${{ secrets.keyStorePassword }}
          keyPassword: ${{ secrets.keyPassword }}
          keyAlias: ${{ secrets.keyAlias }}
        run: |
          echo "${{ env.androidKeyStore }}" | base64 --decode > ${{ env.keystorePath }}
          echo storePassword="${{ env.keyStorePassword }}" >> ${{ env.keyPropertiesPath }}
          echo keyPassword="${{ env.keyPassword }}" >> ${{ env.keyPropertiesPath }}
          echo keyAlias="${{ env.keyAlias }}" >> ${{ env.keyPropertiesPath }}
          echo storeFile="${{ env.keystorePath }}" >> ${{ env.keyPropertiesPath }}
      - name: Build Apk
        if: inputs.buildApk
        working-directory: ${{ inputs.appDirectory }}
        run: flutter build apk --build-number=${{ env.BUILD_NUMBER }} ${{ secrets.additionalBuildArguments}}
      - name: Build Bundle
        if: inputs.buildBundle
        working-directory: ${{ inputs.appDirectory }}
        run: flutter build appbundle --build-number=${{ env.BUILD_NUMBER }} ${{ secrets.additionalBuildArguments}}
      - name: Archive Artifacts
        if: inputs.archiveArtifacts
        uses: actions/upload-artifact@v3
        with:
          name: Android Apps
          retention-days: 5
          path: |
            **/release/**/*.apk
            **/release/**/app-release.aab
      - name: Upload to Google Play
        if: inputs.upload == true && github.event_name != 'pull_request'
        uses: maierj/fastlane-action@v2.2.0
        env:
          GOOGLE_UPLOAD_KEY: ${{ secrets.googleApiKey }}
        with:
          verbose: true
          lane: uploadApp
          subdirectory: ./${{ inputs.appDirectory }}/android
          bundle-install-path: "vendor/bundle"
